<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="Dao.memberDao">
	<select id="selectOneMember" parameterType="String" resultType="member">
		select * from member where id = #{id}
	</select>

	<insert parameterType="member" id="insertMember">
		insert into member
		values
		(#{id}, #{pw}, #{name}, #{phone}, #{addr}, #{email}, #{nickname},
		#{birth}, 3, #{file}, default, 1, #{content}, #{profile}, #{authCode}, 0);
	</insert>
	
	<select id="searchMember" parameterType="java.util.HashMap" resultType="member">
		select * from member 
		where 1=1
		<if test = "column != null">
		#{column} like'%${text}%' 
		</if>
		<if test = "isCheck != null">
		and isCheck=#{isCheck};
		</if>
	</select>

	<select id="searchApproveArtist" parameterType="java.util.HashMap" resultType="member">
		select * from member
		where 1 = 0
		<if test = "id != null">
		or id like '%${id}%'
		</if>
		<if test = "name != null">
		or name like '%${name}%'
		</if>
		<if test = "nickname != null">
		or nickname like '%${nickname}%'
		</if>
		<if test = "searchType == null">
		or 1 = 1
		</if>
		and content is not null
		and (isCheck = 3 || isCheck = 4)
		limit #{skip}, #{qty};
	</select>
	
	<select id="selectAllMember" parameterType="java.util.HashMap" resultType="member"> <!-- 수정 -->
		select * from member
		where 1 = 0
		<if test = "id != null">
		or id like '%${id}%'
		</if>
		<if test = "name != null">
		or name like '%${name}%'
		</if>
		<if test = "nickname != null">
		or nickname like '%${nickname}%'
		</if>
		<if test = "searchType == null">
		or 1 = 1
		</if>
		<if test = "isCheck != null">
		and isCheck = #{isCheck}
		</if>
		limit #{skip}, #{qty};
	</select>
	
	<delete id="deleteMember" parameterType="String">
		delete from member where id={id};
	</delete>

	<update id="blackList" parameterType="String">
		update member set state=0 where id=#{id};
	</update>

	<update id="updateApproveArtist" parameterType="String">
		update member set isCheck=2 where id=#{id};
	</update>

	<update id="updateRefuseArtist" parameterType="String">
		update member set isCheck=4 where id=#{id};
	</update>

	<update id="updateMember" parameterType="member">
	
	</update>
	
	<select id="selectMyAttendLec" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from lecture join attendants using(no) where id = #{id} order by attendDate desc limit ${skipA}, ${qty}
	</select>
	
	<!-- 모집 중인 강의내역: 사용자와 아티스트 나누어 조건 쿼리 작성 -->
	<select id="selectGatherLec" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<if test="guestID!=null">
			select * from lecture where guestID=#{guestID} order by writeDate desc limit ${skipG}, ${qty}
		</if>
		<if test="artistID!=null">
			select * from lecture where artistID=#{artistID} and (state = 1 or state = 2 or state = 6) 
			order by writeDate desc limit ${skipG}, ${qty}
		</if>
	</select>
	
	<select id="selectOnePay" parameterType="String" resultType="pay">
	select * from pay where orderNumber = #{orderNumber}
	</select>
	
	<insert id="insertLecturePay" parameterType="pay">
	
	</insert>
	
	<insert id="insertArt" parameterType="art" >
		insert into art(title, file, genre, content, sellCheck, price, isCheck, id)
		values (#{title}, #{file}, #{genre}, #{content}, #{sellCheck},
		#{price}, #{isCheck}, #{id});
	</insert>

	<select id="selectArtistArt" parameterType="String" resultType="art">
		select * from art where id=#{id} order by artDate desc
	</select>
	
	<update id="updateArt" parameterType="java.util.HashMap">
		<if test="totalCount!=null">
			update art set totalCount=#{totalCount} where no=#{no};
		</if>
		<if test="totalCount==null">
			update art set title=#{title}, file=#{file}, content=#{content} where no=#{no};
		</if>
	</update>

	<delete id="deleteArt" parameterType="java.util.HashMap">
		delete from art where no=#{no} and id=#{id};
	</delete>

	<select id="selectRequestLec" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from lecture where artistID=#{id} and (state=3 or state=5) order by state limit ${skipR},${qty}
	</select>
	
	<select id="selectApproveLec" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from lecture where artistID=#{id} and state=4 limit ${skipAp},${qty}
	</select>
	
	<select id="selectSellingArt" parameterType="java.util.HashMap" resultType="art">
		select * from art where id=#{id} and sellCheck=1 and isCheck=1 limit ${skipSell}, ${qty}
	</select>
	
	<select id="selectSoldArt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *, p.id as p_id, p.state as p_state from art a join pay p using(no) where a.sellCheck = 1
		and p.isCheck =0 and a.id = #{id} order by payDate desc
		limit ${skipSold}, ${qty}
	</select>
<!-- 	수 정 -->
	<select id="selectBuyingArt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select pay.no, pay.isCheck, art.title as 'artTitle', lecture.title as 'lecTitle',
	art.id as 'artID', lecture.artistID as 'lecID', art.price as 'artPrice', lecture.price as 'lecPrice', totalPrice,
	payMethod, pay.state, payDate, orderNumber
	from pay join art join lecture 
	on (pay.no=art.no and pay.isCheck=0) or (pay.no=lecture.no and pay.isCheck=1) 
	where pay.id = #{id} group by pay.no order by payDate desc limit ${skipBuy}, ${qty} 
	</select>

	<update id="updateDelivery" parameterType="pay">
	update pay set state = #{state} where orderNumber = #{orderNumber};
	</update>
	
	<select id="selectOneNickname" parameterType="String" resultType="member">
		select * from member where nickname = #{nickname};
	</select>

	<select id="getArtistCount" parameterType="java.util.HashMap" resultType="int">
		select count(*) from member
		where 1 = 0
		<if test = "id != null">
		or id like '%${id}%'
		</if>
		<if test = "name != null">
		or name like '%${name}%'
		</if>
		<if test = "nickname != null">
		or nickname like '%${nickname}%'
		</if>
		<if test = "searchType == null">
		or 1 = 1
		</if>
		and content is not null
		and (isCheck = 3 || isCheck = 4);
	</select>

	<select id="getCount" resultType="int" parameterType="java.util.HashMap"> <!-- 추가 -->
		select count(*) from member
		where 1 = 0
		<if test = "id != null">
		or id like '%${id}%'
		</if>
		<if test = "name != null">
		or name like '%${name}%'
		</if>
		<if test = "nickname != null">
		or nickname like '%${nickname}%'
		</if>
		<if test = "searchType == null">
		or 1 = 1
		</if>
		<if test = "isCheck != null">
		and isCheck = #{isCheck}
		</if>
	</select>

	<select id="getAttendLecCount" parameterType="String"
		resultType="int">
		select count(*) from lecture join attendants using(no) where id = #{id}
	</select>
	
	<!-- 모집 중인 강의 레코드 수: 사용자와 아티스트 나누어 조건 쿼리 작성 -->
	<select id="getGatherLecCount" parameterType="java.util.HashMap"
		resultType="int">
		<if test="guestID!=null">
			select count(*) from lecture where guestID=#{guestID}
		</if>
		<if test="artistID!=null">
		select count(*) from lecture where artistID=#{artistID} and (state = 1 or state = 2 or state = 6) 
		</if>
	</select>

	<select id="getRequestLecCount" parameterType="String"
		resultType="int">
		select count(*) from lecture where artistID=#{id} and (state=3 or state=5)
	</select>

	<select id="getApproveLecCount" parameterType="String"
		resultType="int">
		select count(*) from lecture where artistID=#{id} and state=4
	</select>
<!-- 	수 정 -->
	<select id="getBuyingArtCount" parameterType="String"
		resultType="int">
	select count(distinct pay.no) from pay join art join lecture 
	on (pay.no=art.no and pay.isCheck=0) or (pay.no=lecture.no and pay.isCheck=1) 
	where pay.id = #{id}
	</select>

	<select id="getSellingArtCount" parameterType="String"
		resultType="int">
		select count(*) from art where id=#{id} and sellCheck=1 and isCheck=1
	</select>

	<select id="getSoldArtCount" parameterType="String" resultType="int">
		select count(*) from art a join pay p using(no) where a.sellCheck = 1
		and p.isCheck =0 and a.id = #{id}
	</select>

	<select id="getOnePayCount" parameterType="String" resultType="int">
		select count(*) from pay where id=#{id}
	</select>
	
<!-- 강의 승인시 update 쿼리 추가 -->
	<select id="updateApproveLec" parameterType="lecture">
	update lecture set state = #{state} where no = #{no};
	</select>
	
	<update id="userAuth" parameterType="String">
		update member set authStatus = 1 where email = #{email};
	</update>
	
	<select id="selectPayByNo" parameterType="java.util.HashMap" resultType="pay">
		select * from pay where no=#{no} and isCheck=#{isCheck};
	</select>
	
</mapper>



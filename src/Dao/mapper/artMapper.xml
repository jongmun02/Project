<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Dao.artDao">
	
	<select id="searchArt" parameterType="java.util.HashMap" resultType="art">
   select * from art a join member m using(id) 
   <where>
   m.isCheck = 2 and a.isCheck = 1 
   <if test="title!=null and content==null">
   and title like '%${searchWord}%' 
   </if>
   <if test="content!=null and title==null">
   or a.content like '%${searchWord}%' 
   </if>
   <if test="nickname!=null">
   or nickname like '%${searchWord}%'
   </if>
   <if test="title!=null and content!=null">
   or (title like '%${searchWord}%' or a.content like '%${searchWord}%')
   </if>    
   <if test="genre!=''">
   and genre = '${genre}'
   </if>
   </where>
   order by artDate desc limit ${skip}, ${qty}
   </select>

	<select id="selectTopArt" parameterType="String" resultType="art">
	select *, count(no) from art a join likes using(no) where genre = #{genre} and a.isCheck = 1
	group by no order by count(no) desc limit 6
	</select>

	<select id="selectRecentArt" parameterType="java.util.HashMap" resultType="art">
	select * from art where genre = '${genre}' order by artDate desc limit ${skip}, 9
	</select>
	
	<!-- 	작품 정보 호출(no로 추출) -->
	<select id="selectOneArt" parameterType="int" resultType="art">
		select * from art where no=#{no}
	</select>
	
	<!-- 작품 구매 정보 입력 -->
	<insert id="insertArtPay" parameterType="pay">
		insert into pay (no, id, isCheck, addr, phone, name, totalPrice, payMethod, state, payDate ,orderNumber) 
		values (#{no}, #{id}, #{isCheck}, #{addr}, #{phone}, #{name}, #{totalPrice}, #{payMethod}, #{state}, default, #{orderNumber});
	</insert>
	
	<insert id="insertArtComment" parameterType="artComment">
		insert into artComment(no, id, content, time, groupNo, childNode, groupOrder, writer)
		values (#{no}, #{id}, #{content}, default, #{groupNo}, #{childNode}, #{groupOrder}, #{writer})
	</insert>

	<select id="selectArtComment" parameterType="java.util.HashMap" resultType="artComment">
		select * from artComment where no=#{no} order by groupNo desc, commentNo asc limit ${startComment}, ${skip};
	</select>
	
	<select id="selectArtLatestcomment" resultType="artComment">
		select * from artComment order by commentNo desc limit 1;
	</select>
	
	<select id="searchArtCount" parameterType="java.util.HashMap" resultType="int">
	select count(*) from art a join member m using(id) 
	where m.isCheck = 2 and 1 = 0
	<if test="title!=null and content==null">
	or title like '%${searchWord}%' 
	</if>
	<if test="content!=null and title==null">
	or a.content like '%${searchWord}%' 
	</if>
	<if test="nickname!=null">
	or nickname like '%${searchWord}%'
	</if>
	<if test="title!=null and content!=null">
	or (title like '%${searchWord}%' or a.content like '%${searchWord}%')
	</if>
	<if test="type==0">or 1 = 1</if>
	<if test="genre!=''">
	and genre = '${genre}'
	</if>
	</select>

	<select id="selectRecentArtCount" parameterType="String" resultType="int">
	select count(*) from art where genre = #{genre} order by artDate desc
	</select>

<!-- 	추가 -->
	<select id="getMaxGroupNo" parameterType="java.util.HashMap" resultType="int">
		select IFNULL(max(groupNo), 0) from ${comment} where no=#{no};
	</select>

	<update id="deleteComment" parameterType="java.util.HashMap">
		update ${comment} set content=#{content} where no=#{no} and commentNo=#{commentNo};
	</update>

	<update id="updateComment" parameterType="java.util.HashMap">
		update ${comment} set content=#{content} where no=#{no} and commentNo=#{commentNo};
	</update>

<!-- 답글 입력 시 해당 댓글을 밑쪽에 달기 위한 맵퍼 -->
	<select id="selectGroupNo" parameterType="java.util.HashMap" resultType="int">
		select IFNULL(min(groupOrder),-1) from ${comment} where groupNo = #{groupNo} and groupOrder > #{groupOrder} and childNode <![CDATA[<=]]> #{childNode};
	</select>
	
	<select id="maxGroupOrder" parameterType="java.util.HashMap" resultType="int">
		select IFNULL(max(groupOrder),0) from ${comment} where groupNo = #{groupNo};
	</select>

	<update id="updateGroupOrder" parameterType="java.util.HashMap">
		update ${comment} set groupOrder = groupOrder + 1 where groupNo = #{groupNo} and groupOrder <![CDATA[>=]]> #{groupOrder};
	</update>
	
	<delete id="deleteArtComment" parameterType="int">
		delete from artComment where no=#{no};
	</delete>

</mapper>


